<html><div style=font-family:Calibri>
<p>Variables are used to adapt and alter your workflow jobs to fit your output needs and incoming media. A variable is represented by a text string encapsulated with the percentage (%)character:</p>
<p></p>

<p>%f_fps%, %username%, %s_original_name% etc.</p>
<p></p>

<p>FFAStrans has 6 categories of variables:</p>
<p></p>

<p style='margin-left:36pt;margin-top:-15pt'><i>File properties</i></p>
<p style='margin-left:36pt;margin-top:-15pt'><i>Media properties</i></p>
<p style='margin-left:36pt;margin-top:-15pt'><i>OS</i></p>
<p style='margin-left:36pt;margin-top:-15pt'><i>Time</i></p>
<p style='margin-left:36pt;margin-top:-15pt'><i>FFAStrans variables</i></p>
<p style='margin-left:36pt;margin-top:-15pt'><i>User</i></p>
<p>FFAStrans variables are always prefixed with a &quot;s_&quot; (string), &quot;i_&quot; (integer) or &quot;f_&quot; (float):</p>
<p><i>Examples: %<b>s</b>_v_codec%, %<b>i</b>_height%, %<b>f</b>_fps%.</i></p>
<p></p>

<p>To insert a variable click the arrow-button next to a text field. All fields that has an arrow next to it supports variables. Please note that the notation for the JSON variable is the same as accessing JSON objects in modern programming languages. The difference is that the complete notation must be encapsulated with % and currently it only support the dot. notation. For example:</p>
<p><i>%o_media.audio.streams[1]%</i> will try to access the %o_media% base variable where &quot;audio&quot; is the child object to &quot;%o_media%&quot;, &quot;stream&quot; is the child array to &quot;audio&quot; and &quot;[1]&quot; is the index number in the array.</p>
<p></p>

<p><b><u>File variables</u></b></p>
<p style=margin-top:-15>File properties are derived from the original input file. ALL files has these properties so they will always be populated with data.</p>
<p><b><i>Note: The variable&quot;%s_original_full%&quot; when coming from the &quot;FTP&quot;-monitor will not work when attempted used in FFAStrans as a Windows path.</i></b></p>
<p></p>

<p><b><u>Media variables</u></b></p>
<p style=margin-top:-15>Media properties are derived from the original input file. Different types of media can contain different kind of properties. E.g. a wave file does not have height or video bitrate. Properties that cannot be populated is disregarded.</p>
<p></p>

<p><b><u>OS variables/statics</u></b></p>
<p style=margin-top:-15>These variables, also called system environments, are the ones that resides within the OS independent of FFAStrans. But all can be utilized within FFAStrans. E.g. the variable %username% is a part of the OS variables. OS variables are in fact statics that don't change from job to job, or workflow to workflow. But be aware that they might vary on hosts in a farming environment.</p>
<p></p>

<p><b><u>Time variables</u></b></p>
<p style=margin-top:-15>These are a selection of time variables read from the system time.</p>
<p></p>

<p><b><u>System variables</u></b></p>
<p style=margin-top:-15>These are variables generated by FFAStrans. E.g. <i>%s_wf_name%</i> holds the name of the workflow on where the job runs.</p>
<p></p>

<p><b><u>User variables/statics</u></b></p>
<p style=margin-top:-15>There are two kind of user variables. &quot;Variables&quot; and &quot;Statics&quot;.</p>
<p></p>

<p style='margin-left:36pt'><b>Variables:</b></p>
<p style='margin-left:36pt;margin-top:-15pt'>User variables are populated using the &quot;Populate variables&quot;-node within a workflow. See help for that node.</p>
<p></p>

<p style='margin-left:36pt'><b>Statics:</b></p>
<p style='margin-left:36pt;margin-top:-15pt'>Creating statics are very handy for e.g. representing a very long path in a short static. Example:&nbsp;&nbsp;</p>
<p style='margin-left:36pt'><i>%S_MS_OUTPUT%=D:\Media\Customer previews\Huge important company\720p\Windows Media Video\500k bitrate with watermark</i></p>
<p></p>

<p style='margin-left:36pt'>Statics never change unless you do it yourself manually.</p>
<p></p>

<p><b><u>Special variables</u></b></p>
<p style=margin-top:-15>A few inbuilt variables behave a bit different than others:</p>
<p></p>

<p style='margin-left:36pt'><b><i>%s_original_path~<u>n</u>%</i></b> = Folder name n-steps backwards.</p>
<p style='margin-left:72pt'><b><i>Example: </i></b>If the input source is &quot;\\VIDEONAS\<b>share</b>\inbound\<b>canon</b>\<b>mts-video</b>\00003. MTS&quot;</p>
<p style='margin-left:72pt'>%original_path~1% = &quot;mts-video&quot;</p>
<p style='margin-left:72pt'>%original_path~2% = &quot;canon&quot;</p>
<p style='margin-left:72pt'>%original_path~4% = &quot;share&quot;</p>
<p></p>

<p style='margin-left:36pt'><b><i>%s_source%</i></b> represent the input source for any processor. It can be altered using the &quot;Populate variables&quot;-node.</p>
<p></p>

<p style='margin-left:36pt'><b><i>%s_success%</i></b> represent the "Success" message upon job completion. It can be altered using the&quot;Populate variables&quot;-node but not retrieved.</p>
<p></p>

<p style='margin-left:36pt'><b><i>%s_error%</i></b> represent the error message upon job failure. It can be altered using the&quot;Populate variables&quot;-node.</p>
</div></html>